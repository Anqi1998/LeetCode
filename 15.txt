15.三数之和

给你一个包含 n 个整数的数组 nums，判断 nums 中是否存在三个元素 a，b，c ，使得 a + b + c = 0 ？请你找出所有和为 0 且不重复的三元组。

注意：答案中不可以包含重复的三元组。

func threeSum(nums []int) [][]int {
    if len(nums) == 0{
        ans := [][]int{}
        return ans
    }
    sort.Ints(nums)
    var n int = len(nums)
    var left int = 0
    var right int = n - 2
    var temp int = n - 1
    var target int = -nums[temp]
    var ans [][]int
    for{
        if temp<2{
            break
        }
        for{
            if right<=left{
            break
        }
            if nums[left] + nums[right] > target{
                right -=1
            }else if nums[left] + nums[right] < target{
                left +=1
            }else{
                tempans := []int{nums[left],nums[right],-target}
                ans = append(ans,tempans)
                for{
                    left +=1
                    if left>=n||nums[left] != nums[left - 1]{
                        break
                    }
                }
                for{
                    right -=1
                    if right<0||nums[right] != nums[right + 1]{
                        break
                    }
                }
            }
        }
        for{
                temp -=1
                    if temp<=1||nums[temp] != nums[temp + 1]{
                        break
                    }
                }
                target = -nums[temp]
        right = temp - 1
        left = 0
    }
    return ans
}

排序+双指针